import mongoose from "mongoose";

const PropertySchema = new mongoose.Schema(
  {
    id: { type: String, unique: true, required: true },
    listing_url: { type: String },
    scrape_id: { type: Number },
    last_scraped: { type: String },
    source: { type: String },
    name: { type: String },
    description: { type: String },
    neighborhood_overview: { type: String },
    picture_url: { type: String },
    host_id: { type: Number },
    host_url: { type: String },
    host_name: { type: String },
    host_since: { type: String },
    host_location: { type: String },
    host_about: { type: String },
    host_response_time: { type: String },
    host_response_rate: { type: String },
    host_acceptance_rate: { type: String },
    host_is_superhost: { type: String },
    host_thumbnail_url: { type: String },
    host_picture_url: { type: String },
    host_neighbourhood: { type: String },
    host_listings_count: { type: Number },
    host_total_listings_count: { type: Number },
    host_verifications: { type: String },
    host_has_profile_pic: { type: String },
    host_identity_verified: { type: String },
    neighbourhood: { type: String },
    neighbourhood_cleansed: { type: String },
    neighbourhood_group_cleansed: { type: String },
    latitude: { type: String },
    longitude: { type: String },
    property_type: { type: String },
    room_type: { type: String },
    accommodates: { type: Number },
    bathrooms: { type: Number },
    bathrooms_text: { type: String },
    bedrooms: { type: Number },
    beds: { type: Number },
    amenities: { type: String },
    price: { type: Number },
    minimum_nights: { type: Number },
    maximum_nights: { type: Number },
    minimum_minimum_nights: { type: Number },
    maximum_minimum_nights: { type: Number },
    minimum_maximum_nights: { type: Number },
    maximum_maximum_nights: { type: Number },
    minimum_nights_avg_ntm: { type: Number },
    maximum_nights_avg_ntm: { type: Number },
    calendar_updated: { type: String },
    has_availability: { type: String },
    availability_30: { type: Number },
    availability_60: { type: Number },
    availability_90: { type: Number },
    availability_365: { type: Number },
    calendar_last_scraped: { type: String },
    number_of_reviews: { type: Number },
    number_of_reviews_ltm: { type: Number },
    number_of_reviews_l30d: { type: Number },
    availability_eoy: { type: Number },
    number_of_reviews_ly: { type: Number },
    estimated_occupancy_l365d: { type: Number },
    estimated_revenue_l365d: { type: Number },
    first_review: { type: String },
    last_review: { type: String },
    review_scores_rating: { type: Number },
    review_scores_accuracy: { type: Number },
    review_scores_cleanliness: { type: Number },
    review_scores_checkin: { type: Number },
    review_scores_communication: { type: Number },
    review_scores_location: { type: Number },
    review_scores_value: { type: Number },
    license: { type: String },
    instant_bookable: { type: String },
    calculated_host_listings_count: { type: Number },
    calculated_host_listings_count_entire_homes: { type: Number },
    calculated_host_listings_count_private_rooms: { type: Number },
    calculated_host_listings_count_shared_rooms: { type: Number },
    reviews_per_month: { type: Number },
  },
  {
    timestamps: true,
  }
);

const Property = mongoose.models.Property || mongoose.model("Property", PropertySchema);

export default Property;